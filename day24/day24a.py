'''
面向对象编程：
  思想：
    角色的抽象，创建类，创建角色（实例化），操作这些实例
class 类名：
      静态属性='aaa'
      def __init__(self):pass


类名.静态属性                     储存在类的命名空间里
对象=类名()                        实例化：创造一个self对象，执行init方法，返回self对象给外部
对象.属性
对象.方法 （实际上是将方法和对象绑定）                       类名.方法(对象)
对象可以使用类的静态变量
类无法使用对象的变量


组合 ：   一个类中的属性值是另一个类的对象 就是在类中实例化了另外一个类
'''

